---
title: |

  <br>
  <br>
   <br>
    <br>
     <br>

  Text Analysis of the Conflict in Gaza Reveals the Civilian Impact
  
author: Kevin Linares  (https://github.com/klinares/airwars_scraping_project)
embed-resources: true
editor: visual
format:
    revealjs:
        width: 1200
        height: 900
        slide-number: true
title-slide-attributes: 
  data-background-image: "/home/kevin/repos/airwars_scraping_project/documentation/images/unicef_gaza_crisis.png"
  data-background-position: 0% 100%, center
---

```{r, echo=FALSE}
pacman::p_load(lubridate, RSQLite, DBI, zoo, ggthemes, patchwork,
               factoextra, gridExtra, ggmap,
               ggdark, janitor,  jsonlite, viridis, tidyverse)

options(scipen=999)

# connect to database
mydb <- dbConnect(
  SQLite(), 
  "~/repos/airwars_scraping_project/database/airwars_db.sqlite")


# read in data tables
airwars_meta <- tbl(mydb, "airwars_meta") |> 
  as_tibble() |> 
  # convert Incident_Date to date format
  mutate(Incident_Date = as_date(Incident_Date)) |> 
  arrange(Incident_Date)


airwars_incidents <- tbl(mydb, "airwars_incidents") |> 
  as_tibble() |> 
  clean_names() |> 
  # convert NA to 0
  mutate(killed = ifelse(is.na(killed), 0, killed),
         injured = str_remove(civilians_reported_injured, ".*â€“"),
         injured = ifelse(is.na(injured), 0, injured),
         injured = as.numeric(injured),
         incident_lat = as.numeric(incident_lat),
         incident_long = as.numeric(incident_long),
         children_killed = ifelse(is.na(children_killed), 0, children_killed),
         women_killed = ifelse(is.na(women_killed), 0, women_killed),
         men_killed = killed - (children_killed + women_killed),
         men_killed = ifelse(is.na(men_killed), 0, men_killed)) |> 
  rename(Incident_id = incident_id) |> 
  # add dates
  left_join(airwars_meta |> select(Incident_id, Incident_Date))



daily_casualties <- tbl(mydb, "daily_casualties") |> 
  as_tibble() |> 
  mutate(Incident_Date = lubridate::as_date(Incident_Date)) |> 
  mutate(data_source = "MoH") 



# combine daily casualties with airwars
incidents_cum <- airwars_incidents |> 
  select(Incident_Date, killed, children_killed, women_killed) |> 
  mutate(across(where(is.integer),~ replace_na(.x, 0))) |> 
  group_by(Incident_Date) |> 
  reframe(killed = sum(killed), children_killed = sum(children_killed), 
                       women_killed = sum(women_killed)) |> 
  mutate(Total = cumsum(killed),
         Children = cumsum(children_killed),
         Women = cumsum(women_killed)) |> 
  select(Incident_Date, Total, Children, Women) |> 
  pivot_longer(-c("Incident_Date")) |> 
  mutate(name = fct_reorder(name, value, .fun = max),
         data_source = "Airwars") |> 
  full_join(daily_casualties) |> 
  arrange(Incident_Date)



# demographics in Gaza
# source https://www.cia.gov/the-world-factbook/countries/gaza-strip/#people-and-society
Total <- 2141643
Children = .45 * Total
Men = (Total - Children) * .51
Women = Total - (Children + Men)

pop_data <- rbind(Total, Children, Men, Women) |> 
  as.data.frame() |> 
  rownames_to_column() |> 
  rename(name=1, pop=2) |> 
  mutate(pop = as.integer(pop))


```

## **Israel-Hamas Conflict, 1 Year Later**

::::: columns
::: {.column width="60%" style="font-size: 36px"}
-   **Background**: 10/7/2023 Hamas surprise attack on Israel.

    -   Estimated Palestinian dead \~44,000 (60% children & women).

-   **Problem**: Hamas Ministry of Health (MoH) casualties, unconfirmed. 

    -   **Claim**: "Women & children disproportionately killed" [UN-OHCHR](https://www.ohchr.org/en/press-releases/2024/05/onslaught-violence-against-women-and-children-gaza-unacceptable-un-experts)

-   **Research Question**: To what extent can open-source data be used to identify patterns in the targeting of Palestinian civilians in Gaza?
:::

::: {.column width="40%" style="width: 600px"}
![](images/aljazeera_gaza_snapshop.png)
:::
:::::

```{css, echo=FALSE}

.title {
  font-size: 85px !important;
  color: white !important;
  font-weight: bold;
  font-family: "Roboto Condensed";
}

.quarto-title-author-name {
  font-size: 45px;
  font-weight: bold;
  color: white !important;
}

```

## Methodology: Analyzing Civilian Casualties

::::: columns
::: {.column width="50%" style="font-size:30px"}
**Data Source**: [Airwars](https://airwars.org/conflict/israel-and-gaza-2023/) tracks casualties from conflicts.

1.  **Web Scrape**: \~ 800 incidents (\~9,000 deaths), & store in SQLite database.

2.  **Reverse Geo-coding**: Query [Nominatim](https://nominatim.org/release-docs/develop/api/Reverse/) API with coordinates, return site type (school, hospital).

3.  **Sentiment Analysis**: Derive emotional tone from assessments. 
      -   [DistilRoBERTa-base](https://huggingface.co/j-hartmann/emotion-english-distilroberta-base), classifies text into Ekman's 6 basic emotions.

4.  **Clustering Analysis**: Cluster incidents geographically to discern civilian casualty patterns.
:::

::: {.column width="50%"}
![](images/airwars_incident_example.png){fig-align="right" width="700" height="600"}
:::
:::::

## Results: Casualty Rate, Sentiment Analysis


```{r}
#| echo: FALSE
#| fig-width: 8
#| fig-height: 4
#| 
# estimate casualty rate
p1 <- incidents_cum |> 
  group_by(data_source) |> 
  filter(Incident_Date == max(Incident_Date)) |> 
  pivot_wider(names_from=name, values_from=value) |> 
  mutate(Men = Total - (Children + Women)) |> 
  select(-Total, -Incident_Date) |> 
  pivot_longer(-data_source) |> 
  left_join(pop_data) |> 
  # calculate casualty rate normalized by per 1000
  mutate(unadjusted = value/sum(value),
         pop_prop = pop/sum(pop),
         adjusted =  (unadjusted * pop_prop) * 1000,
         adjusted = adjusted / sum(adjusted),
         name = fct_reorder(name, adjusted, .fun=min)
                ) |> 
  ungroup() |> 
  select(data_source, name, unadjusted, adjusted) |> 
  reshape2::melt(id=c("data_source", "name")) |> 
  mutate(name = factor(name, 
                       levels=c("Men", 
                                "Women", 
                                "Children" ))) |> 
  filter(data_source == "Airwars") |> 
  ggplot(aes(x=variable, y=value, fill=name)) +
  geom_bar(position="stack", stat="identity") +
  geom_text(aes(label = round(value, 2)*100), 
            position = position_fill(vjust=.5), size=4)  +
  ylab("") +
  xlab("") +
  scale_y_continuous(labels = scales::percent) +
  guides(fill=guide_legend(title="", reverse = FALSE)) +
  scale_fill_viridis_d(option="cividis", direction = -1,
                       alpha=.80, end =.70, begin=.15) +
  dark_theme_linedraw() +
    theme(axis.text.x = element_text(angle = 35, vjust = 0.75, hjust=.9, size=16),
          plot.title = element_text(hjust=.3)) +
    labs(title = str_wrap("Children more likely to be killed, after adjusting for population size.", 40),
    subtitle="Current Casualty Rates")
  
  # sentiment analysis plot
p2 <- 
airwars_incidents |> 
  select(Incident_Date, anger:surprise) |> 
  group_by(Incident_Date) |> 
  reframe(across(where(is.double), ~ mean(.x))) |> 
  pivot_longer(-Incident_Date) |> 
  mutate(name = fct_reorder(name, value, .fun=mean)) |> 
  ggplot(aes(x=Incident_Date, y=value , color= name)) +
  geom_smooth(size=2) +
  scale_y_continuous(labels = scales::percent) +
  xlab("") +
  guides(color=guide_legend(title="", reverse = TRUE)) +
  scale_color_viridis_d(option="mako", direction = 1,
                        alpha=.99, end =.99, begin=.35) +
  dark_theme_linedraw() +
  theme(text = element_text(size = 12),
        plot.title = element_text(hjust=.3)) +
   labs(title = 
          str_wrap("Negative emotional tones more prominent, vary across time.", 30),
    subtitle="Sentiment Analysis 2023-24")

p1 + plot_spacer() + p2 + plot_layout(widths = c(4, .01, 3))


```

## Results: Hierarchical Clustering

::::: columns
::: {.column width="50%" style="font-size:30px"}

```{r}
#| echo: FALSE
#| fig-width: 6
#| fig-height: 7

# drop NA, select variables of interest and scale
hclust_data <- airwars_incidents |> 
  select(incident_lat, incident_long, injured, killed,
        anger:surprise,  -joy) |> 
  drop_na() |> 
  mutate_all(scale)

# create distance matrix
hclust_d <- dist(hclust_data)

# conduct clustering
hc_ward <- hclust(hclust_d, method = "ward.D2")



# write the cluster assignment back to the dataframe, prepare for plotting
airwars_incidents_coord <- airwars_incidents |>
  filter(!is.na(incident_lat)) |> 
  mutate(cluster = factor(cutree(hc_ward, 3))) |> 
  mutate(
    # clean up strike type string
    strike_type = str_remove_all(strike_type, 
                                 "Airstrike and/or|Airstrike,|Artillery,"),
    strike_type = str_trim(strike_type),
    strike_type = ifelse(strike_type == "Counter-Terrorism Action (Ground)", 
                         "Ground operation", 
                         ifelse(strike_type=="Naval bombardment", "Artillery",
                                strike_type)),
    
    # clean up target_type
    target_type = str_replace_all(target_type, "secondary|tertiary|college", "school"),
    target_type = str_replace(target_type, "pharmacy", "hospital"),
    target_type = ifelse(civilian_infrastructure=="IDP or refugee camp", 
                         "IDP or refugee camp", target_type),
    target_type = ifelse(target_type %in% 
                           c("residential", "school", "hospital", "place_of_worship",
                             "IDP or refugee camp"),
                         target_type, "other"),
    # make qualitative variables
    school = ifelse(target_type == "school", 1, 0),
    hospital = ifelse(target_type == "hospital", 1, 0),
    place_of_worship = ifelse(target_type == "place_of_worship", 1, 0),
    refugee_camp = ifelse(str_detect(target_type, "refugee camp"), 1, 0),
    Airstrike = ifelse(strike_type == "Airstrike", 1, 0),
    Artillery = ifelse(strike_type=="Artillery", 1, 0)
  ) 


# plot cluster with averages
airwars_incidents_coord |> 
  group_by(cluster) |> 
  reframe(sadness = mean(sadness, na.rm = TRUE), 
          fear = mean(fear, na.rm = TRUE), 
          disgust = mean(disgust, na.rm = TRUE), 
          anger = mean(anger, na.rm = TRUE), 
          men_killed = mean(men_killed, na.rm = TRUE), 
          children_killed = mean(children_killed, na.rm = TRUE), 
          women_killed = mean(women_killed, na.rm = TRUE),
          school = mean(school, na.rm = TRUE), 
          hospital = mean(hospital, na.rm = TRUE), 
          place_of_workship = mean(place_of_worship, na.rm = TRUE),
          refugee_camp = mean(refugee_camp, na.rm = TRUE), 
          artillery = mean(Artillery, na.rm = TRUE)) |> 
  pivot_longer(-cluster) |>
  mutate(name=factor(name, levels=c("children_killed","women_killed","men_killed",
                                    "sadness", "fear", "disgust", "anger",
                                    "school", "hospital", "place_of_workship",
                                    "refugee_camp", "artillery"))) |> 
  ggplot(aes(x=cluster, y=value, fill=cluster)) +
  geom_bar(stat="identity", width=.5, position = "dodge") +
  facet_wrap(~name, scales = "free", ncol=3) +
  theme_hc() +
  ylab("") +
  xlab("") +
  guides(fill=guide_legend(title="Clusters")) +
  scale_fill_viridis_d(option="magma", direction = -1,
                        alpha=.90, end =.20, begin=.75)  +
  dark_theme_linedraw() +
  theme(legend.position="top",,
        text = element_text(size = 16),
        plot.title = element_text(hjust=1)) +
   labs(title = str_wrap("Three clusters were adequate for these data.", 60),
    subtitle= 
      str_wrap("Cluster 3, incidents w/ highest child & women average deaths",
               50))
 
```
:::

::: {.column width="50%"}
```{r}
#| echo: FALSE
#| fig-width: 7
#| fig-height: 9

# plot the clusters on a map
cs_key <- read_csv("~/repos/api-keys.csv") |> 
  filter(key_id == "Google_key") |> 
  pull(key)


register_google(key = cs_key, write = TRUE)

 #"Gaza Strip", 
gaza_map <- get_googlemap(center = c(lon = 34.3900, lat = 31.4100),  
                          maptype = "satellite", size = c(900, 1200), 
                          # width, height
                          zoom=12) 


gaza_map |> 
  ggmap() + 
  stat_density2d(data = airwars_incidents_coord,
                 aes(x = incident_long, y = incident_lat,
                     fill = cluster, alpha = ..level..),
                 size = 1, bins = 20,
                 geom = 'polygon') +
  scale_alpha(range = c(.01, .35), guide = FALSE) +
  geom_point(aes(x = incident_long, y = incident_lat , 
                 color=cluster), size=.6,
             data=airwars_incidents_coord, show.legend = FALSE) +
  scale_color_viridis_d(option="magma", direction = -1,
                        alpha=.85, end =.20, begin=.75)  +  
  scale_fill_viridis_d(option="magma", direction = -1,
                       end =.20, begin=.75)  +  
  theme(legend.position="none",
        text = element_text(size = 16))



rm(airwars_incidents_coord)
rm(airwars_incidents)

# the following creates a pdf
# pagedown::chrome_print("repos/airwars_scraping_project/documentation/airwars_project_slides.html" )
```
:::
:::::
